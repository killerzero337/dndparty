generator client {
  provider = "prisma-client-js"
}

//datasource db {
//  provider  = "postgresql"
//  url  	    = env("DATABASE_URL")
//  directUrl = env("DIRECT_URL")
//}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER") // o  ADMIN
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Partida {
  id            String          @id
  jugadores     Jugador[]
  dungeonmaster Dungeonmaster[]
}

model Dungeonmaster {
  id           String    @id @default(cuid())
  nombre       String
  especialidad String
  role         String?   @default("ADMIN")
  partidas     Partida[]
}

model Jugador {
  id      String    @id @default(cuid())
  nombre  String
  ficha   String
  partida Partida[]
}
